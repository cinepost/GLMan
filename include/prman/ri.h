#ifndef RI_H
#define RI_H /* RenderMan Interface, C binding */

#define RI_VERSION 4

/*
# ------------------------------------------------------------------------------
#
# Copyright (c) 1997-2012 Pixar Animation Studios. All rights reserved.
#
# The information in this file (the "Software") is provided for the
# exclusive use of the software licensees of Pixar.  Licensees have
# the right to incorporate the Software into other products for use
# by other authorized software licensees of Pixar, without fee.
# Except as expressly permitted herein, the Software may not be
# disclosed to third parties, copied or duplicated in any form, in
# whole or in part, without the prior written permission of
# Pixar Animation Studios.
#
# The copyright notices in the Software and this entire statement,
# including the above license grant, this restriction and the
# following disclaimer, must be included in all copies of the
# Software, in whole or in part, and all permitted derivative works of
# the Software, unless such copies or derivative works are solely
# in the form of machine-executable object code generated by a
# source language processor.
#
# PIXAR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
# ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT
# SHALL PIXAR BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES
# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
# WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
# ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
# SOFTWARE.
#
# Pixar
# 1200 Park Ave
# Emeryville CA 94608
#
# ------------------------------------------------------------------------------
*/

#include "prmanapi.h"
#include <stdarg.h>

#ifdef __cplusplus
#define RI_EXPORT extern "C" PRMANAPI
#else
#define RI_EXPORT extern PRMANAPI
#endif

/* POD typedefs shared between c and cplusplus ------------------- */
typedef short RtBoolean;
typedef float RtFloat;
typedef int RtInt;
typedef int RtError;
typedef RtFloat RtColor[3];
typedef RtFloat RtPoint[3];
typedef RtFloat RtVector[3];
typedef RtFloat RtNormal[3];
typedef RtFloat RtHpoint[4];
typedef RtFloat RtMatrix[4][4];
typedef RtFloat RtBasis[4][4];
typedef RtFloat RtBound[6];
typedef RtFloat RtInterval[2];

typedef char *RtToken; // RtToken should be const, but that's invasive
typedef char *RtString;
typedef void *RtPointer;
typedef RtString RtArchiveHandle;
typedef RtString RtBxdfHandle;
typedef RtPointer RtContextHandle;
typedef RtPointer RtLightHandle;
typedef RtString RtIntegratorHandle;
typedef RtPointer RtObjectHandle;
typedef RtString RtPatternHandle;
typedef RtString RtShaderHandle;
typedef RtPointer RtVolumeHandle;

typedef char const *RtConstToken;  // assist with migration to const-clean
typedef char const *RtConstString;
typedef void const *RtConstPointer;

typedef RtFloat (*RtFilterFunc)(RtFloat, RtFloat, RtFloat, RtFloat);
typedef void (*RtErrorHandler)(RtError, RtInt, char *);
typedef void (*RtProcSubdivFunc)(RtPointer, RtFloat);
typedef void (*RtProcFreeFunc)(RtPointer);
typedef void (*RtArchiveCallback)(RtToken, char *, ...);
typedef void (*RtProc2SubdivFunc)(RtContextHandle, RtFloat detail,
                                RtInt n, RtToken toks[], RtPointer vals[]);
typedef void (*RtProc2BoundFunc)(RtInt n,
                                 RtToken const toks[],
                                 RtPointer const vals[],
                                 RtBound result[2]);

#ifdef __cplusplus

/*
* RiTypesHelper.h offers support for modern c++ programming conveniences.
* The idea is that we can 'alias' the c++ classes to plain-old-data (POD)
* types in the standard typedefs (above).
*
* Here's an example programming idiom (for the simple scalar case):
*
*  RtPoint op = {1,2,3}; // POD
*  RtPoint3 &np = reinterpret_cast(RtPoint3&)(op); // RtPoint3 is a c++ type
*
*  Note that the C++ types (RtPoint3 is this example) will have different
*  functional-call and initialization semantics.  Pass-by-value for RtPoint
*  is implemented as a pointer reference while RtPoint3 is struct copy.
*  For highest performance code (or to match traditional Ri semantics) it
*  may be advised to pass RtPoint3 by reference. Or continue to rely on
*  POD for transport.
*
*  Currently RiTypesHelper.h offers these classes with the obvious
*  operator overrides:
*
*  RtPoint2, RtVector2 have no "C" equivalent
*  RtPoint3, RtVector3, RtNormal3 match RtPoint, RtVector and RtNormal
*  RtColorRGB matches RtColor
*  RtMatrix44 matches RtMatrix
*
*/
#include "RiTypesHelper.h"

#endif // end of cplusplus

RI_EXPORT RtToken RI_A;
RI_EXPORT RtToken RI_ABORT;
RI_EXPORT RtToken RI_ADD;
RI_EXPORT RtToken RI_ADDCOVERAGE;
RI_EXPORT RtToken RI_AI;
RI_EXPORT RtToken RI_ALGORITHM;
RI_EXPORT RtToken RI_AMBIENTLIGHT;
RI_EXPORT RtToken RI_AMPLITUDE;
RI_EXPORT RtToken RI_APERTURE;
RI_EXPORT RtToken RI_ARCHIVE;
RI_EXPORT RtToken RI_ATMOSPHERES;
RI_EXPORT RtToken RI_ATRIBUTECOMBINING;
RI_EXPORT RtToken RI_AUTOBIAS;
RI_EXPORT RtToken RI_AZ;
RI_EXPORT RtToken RI_AZI;
RI_EXPORT RtToken RI_BACKFACETOLERANCE;
RI_EXPORT RtToken RI_BACKFACING;
RI_EXPORT RtToken RI_BACKGROUND;
RI_EXPORT RtToken RI_BEAMDISTRIBUTION;
RI_EXPORT RtToken RI_BESSEL;
RI_EXPORT RtToken RI_BEZIER;
RI_EXPORT RtToken RI_BIAS;
RI_EXPORT RtToken RI_BIAS0;
RI_EXPORT RtToken RI_BIAS1;
RI_EXPORT RtToken RI_BICUBIC;
RI_EXPORT RtToken RI_BILINEAR;
RI_EXPORT RtToken RI_BINARY;
RI_EXPORT RtToken RI_BINARYFORCE;
RI_EXPORT RtToken RI_BLACK;
RI_EXPORT RtToken RI_BLACKMANHARRIS;
RI_EXPORT RtToken RI_BLP;
RI_EXPORT RtToken RI_BOUND;
RI_EXPORT RtToken RI_BOUND0;
RI_EXPORT RtToken RI_BOUND1;
RI_EXPORT RtToken RI_BOX;
RI_EXPORT RtToken RI_BRICKMEMORY;
RI_EXPORT RtToken RI_BSPLINE;
RI_EXPORT RtToken RI_BUCKET;
RI_EXPORT RtToken RI_BUCKETSIZE;
RI_EXPORT RtToken RI_BUCKETSTRIDE;
RI_EXPORT RtToken RI_BUMPY;
RI_EXPORT RtToken RI_CACHEDIFFUSECOLORS;
RI_EXPORT RtToken RI_CACHEMODE;
RI_EXPORT RtToken RI_CAMERA;
RI_EXPORT RtToken RI_CAMERAHITMODE;
RI_EXPORT RtToken RI_CATMARK;
RI_EXPORT RtToken RI_CATROM;
RI_EXPORT RtToken RI_CAUSTICMAP;
RI_EXPORT RtToken RI_CENTERED;
RI_EXPORT RtToken RI_CENTERFILTER;
RI_EXPORT RtToken RI_CHANLIST;
RI_EXPORT RtToken RI_CHECKNANS;
RI_EXPORT RtToken RI_CI;
RI_EXPORT RtToken RI_CLAMP;
RI_EXPORT RtToken RI_CLAMPCOLOR;
RI_EXPORT RtToken RI_CLAMPED;
RI_EXPORT RtToken RI_CLAMPINGENABLE;
RI_EXPORT RtToken RI_CLAMPMOTION;
RI_EXPORT RtToken RI_CLAMPWIDTH;
RI_EXPORT RtToken RI_CLEARLOCALS;
RI_EXPORT RtToken RI_CLIPPING;
RI_EXPORT RtToken RI_CLIPPINGPLANE;
RI_EXPORT RtToken RI_COLOR;
RI_EXPORT RtToken RI_COLORCLAMP;
RI_EXPORT RtToken RI_COMMENT;
RI_EXPORT RtToken RI_COMPRESSION;
RI_EXPORT RtToken RI_COMPRESSIONQ;
RI_EXPORT RtToken RI_CONDABORT;
RI_EXPORT RtToken RI_CONEANGLE;
RI_EXPORT RtToken RI_CONEDELTAANGLE;
RI_EXPORT RtToken RI_CONSTANT;
RI_EXPORT RtToken RI_CONSTANTWIDTH;
RI_EXPORT RtToken RI_CONTINUATIONBYDEFAULT;
RI_EXPORT RtToken RI_COORDINATESYSTEM;
RI_EXPORT RtToken RI_CORNER;
RI_EXPORT RtToken RI_CPUTIME;
RI_EXPORT RtToken RI_CREASE;
RI_EXPORT RtToken RI_CROPWINDOW;
RI_EXPORT RtToken RI_CS;
RI_EXPORT RtToken RI_CUBIC;
RI_EXPORT RtToken RI_CULL;
RI_EXPORT RtToken RI_CURRENT;
RI_EXPORT RtToken RI_DEBUG;
RI_EXPORT RtToken RI_DECIMATIONRATE;
RI_EXPORT RtToken RI_DEEPSHADOWERROR;
RI_EXPORT RtToken RI_DEEPSHADOWMEMORY;
RI_EXPORT RtToken RI_DEEPSHADOWSIMPLIFYERROR;
RI_EXPORT RtToken RI_DEEPSHADOWTILES;
RI_EXPORT RtToken RI_DEFCACHE;
RI_EXPORT RtToken RI_DEFINITION;
RI_EXPORT RtToken RI_DELETELIGHTS;
RI_EXPORT RtToken RI_DEPTHBIAS;
RI_EXPORT RtToken RI_DEPTHCUE;
RI_EXPORT RtToken RI_DEPTHFILTER;
RI_EXPORT RtToken RI_DEPTHOFFIELD;
RI_EXPORT RtToken RI_DERIVATIVES;
RI_EXPORT RtToken RI_DETAIL;
RI_EXPORT RtToken RI_DETAILRANGE;
RI_EXPORT RtToken RI_DICE;
RI_EXPORT RtToken RI_DICEMETHOD;
RI_EXPORT RtToken RI_DIFFERENCE;
RI_EXPORT RtToken RI_DIFFUSE;
RI_EXPORT RtToken RI_DIFFUSEHITMODE;
RI_EXPORT RtToken RI_DISABLE;
RI_EXPORT RtToken RI_DISABLELIGHTS;
RI_EXPORT RtToken RI_DISK;
RI_EXPORT RtToken RI_DISPLACEMENT;
RI_EXPORT RtToken RI_DISPLACEMENTBOUND;
RI_EXPORT RtToken RI_DISPLACEMENTS;
RI_EXPORT RtToken RI_DISPLACE_RATIOS;
RI_EXPORT RtToken RI_DISPLAY;
RI_EXPORT RtToken RI_DISPLAYEXPOSURE;
RI_EXPORT RtToken RI_DISPLAYONLYEDITLIGHTS;
RI_EXPORT RtToken RI_DISPLAYOPACITYCHAN;
RI_EXPORT RtToken RI_DISPLAYQUANTIZE;
RI_EXPORT RtToken RI_DISTANCE;
RI_EXPORT RtToken RI_DISTANTLIGHT;
RI_EXPORT RtToken RI_DITHER;
RI_EXPORT RtToken RI_DOF;
RI_EXPORT RtToken RI_DOFASPECT;
RI_EXPORT RtToken RI_DOUBLECOMP;
RI_EXPORT RtToken RI_DOUBLESHADED;
RI_EXPORT RtToken RI_DPDTIME;
RI_EXPORT RtToken RI_DPDU;
RI_EXPORT RtToken RI_DPDV;
RI_EXPORT RtToken RI_DSOFILE;
RI_EXPORT RtToken RI_DSOFLOAT;
RI_EXPORT RtToken RI_DSONAME;
RI_EXPORT RtToken RI_DSOPARAM;
RI_EXPORT RtToken RI_DSOSTRING;
RI_EXPORT RtToken RI_DYNAMIC;
RI_EXPORT RtToken RI_EDGEEDIT;
RI_EXPORT RtToken RI_EDITLIGHTS;
RI_EXPORT RtToken RI_EMISSIONBIAS;
RI_EXPORT RtToken RI_EMISSIONPOINTCLOUD;
RI_EXPORT RtToken RI_EMIT;
RI_EXPORT RtToken RI_EMPTY;
RI_EXPORT RtToken RI_ENABLE;
RI_EXPORT RtToken RI_ENABLEGAUSSIAN;
RI_EXPORT RtToken RI_ENABLELERP;
RI_EXPORT RtToken RI_ENABLELIGHTS;
RI_EXPORT RtToken RI_ENDOFFRAME;
RI_EXPORT RtToken RI_EPSILON1;
RI_EXPORT RtToken RI_EPSILON2;
RI_EXPORT RtToken RI_ESTIMATOR;
RI_EXPORT RtToken RI_EXCLUSIVE;
RI_EXPORT RtToken RI_EXITAT;
RI_EXPORT RtToken RI_EXPOSURE;
RI_EXPORT RtToken RI_EXTRAPOLATE;
RI_EXPORT RtToken RI_EXTREMEDISPLACEMENT;
RI_EXPORT RtToken RI_EXTREMEMOTIONDOF;
RI_EXPORT RtToken RI_EYESPLITS;
RI_EXPORT RtToken RI_FACEEDIT;
RI_EXPORT RtToken RI_FACEINDEX;
RI_EXPORT RtToken RI_FACEVARYINGINTERPBOUNDARY;
RI_EXPORT RtToken RI_FALLOFFPOWER;
RI_EXPORT RtToken RI_FILE;
RI_EXPORT RtToken RI_FILEMODE;
RI_EXPORT RtToken RI_FILENAME;
RI_EXPORT RtToken RI_FILTER;
RI_EXPORT RtToken RI_FILTERING;
RI_EXPORT RtToken RI_FILTERWIDTH;
RI_EXPORT RtToken RI_FINISHRENDERING;
RI_EXPORT RtToken RI_FLATNESS;
RI_EXPORT RtToken RI_FOCUSFACTOR;
RI_EXPORT RtToken RI_FOCUSREGION;
RI_EXPORT RtToken RI_FOG;
RI_EXPORT RtToken RI_FORCEDSAMPLING;
RI_EXPORT RtToken RI_FORMATPIXELASPECTRATIO;
RI_EXPORT RtToken RI_FORMATRESOLUTION;
RI_EXPORT RtToken RI_FOV;
RI_EXPORT RtToken RI_FRAME;
RI_EXPORT RtToken RI_FRAMEASPECTRATIO;
RI_EXPORT RtToken RI_FRAMEBUFFER;
RI_EXPORT RtToken RI_FRAMECAMERA;
RI_EXPORT RtToken RI_FREQUENCYFRAMETIME;
RI_EXPORT RtToken RI_FROM;
RI_EXPORT RtToken RI_FRUSTUM;
RI_EXPORT RtToken RI_GAUSSIAN;
RI_EXPORT RtToken RI_GEOCACHEMEMORY;
RI_EXPORT RtToken RI_GEOMETRICAPPROXIMATIONFLATNESS;
RI_EXPORT RtToken RI_GEOMETRICAPPROXIMATIONFOCUSFACTOR;
RI_EXPORT RtToken RI_GEOMETRICAPPROXIMATIONMOTIONFACTOR;
RI_EXPORT RtToken RI_GLOBALMAP;
RI_EXPORT RtToken RI_GPRIMLOG;
RI_EXPORT RtToken RI_GPRIMSPLITS;
RI_EXPORT RtToken RI_GRIDAREA;
RI_EXPORT RtToken RI_GRIDCACHESIZE;
RI_EXPORT RtToken RI_GRIDMEMORY;
RI_EXPORT RtToken RI_GRIDS;
RI_EXPORT RtToken RI_GRIDSIZE;
RI_EXPORT RtToken RI_GROUPING;
RI_EXPORT RtToken RI_GRP_MEMBERSHIP;
RI_EXPORT RtToken RI_GRP_TRACESUBSET;
RI_EXPORT RtToken RI_HAIR;
RI_EXPORT RtToken RI_HANDLE;
RI_EXPORT RtToken RI_HANDLEID;
RI_EXPORT RtToken RI_HANDLER;
RI_EXPORT RtToken RI_HEMISPHERESAMPLEMEMORY;
RI_EXPORT RtToken RI_HERMITE;
RI_EXPORT RtToken RI_HIDDEN;
RI_EXPORT RtToken RI_HOLE;
RI_EXPORT RtToken RI_I;
RI_EXPORT RtToken RI_ID;
RI_EXPORT RtToken RI_IDENTIFIER;
RI_EXPORT RtToken RI_IGNORE;
RI_EXPORT RtToken RI_ILLUMINATEHANDLE;
RI_EXPORT RtToken RI_IMMEDIATESUBDIVIDE;
RI_EXPORT RtToken RI_IMPORTANCETHRESHOLD;
RI_EXPORT RtToken RI_INDEXOFREFRACTION;
RI_EXPORT RtToken RI_INSIDE;
RI_EXPORT RtToken RI_INTENSITY;
RI_EXPORT RtToken RI_INTERLEAVE;
RI_EXPORT RtToken RI_INTERPBOUNDARY;
RI_EXPORT RtToken RI_INTERPRETATION;
RI_EXPORT RtToken RI_INTERSECTION;
RI_EXPORT RtToken RI_INTERSECTPRIORITY;
RI_EXPORT RtToken RI_INTERVAL;
RI_EXPORT RtToken RI_JITTER;
RI_EXPORT RtToken RI_KA;
RI_EXPORT RtToken RI_KD;
RI_EXPORT RtToken RI_KEEPFILES;
RI_EXPORT RtToken RI_KR;
RI_EXPORT RtToken RI_KS;
RI_EXPORT RtToken RI_LAGRANGIAN;
RI_EXPORT RtToken RI_LANCZOS;
RI_EXPORT RtToken RI_LEVELSET;
RI_EXPORT RtToken RI_LH;
RI_EXPORT RtToken RI_LIGHT;
RI_EXPORT RtToken RI_LIGHTCOLOR;
RI_EXPORT RtToken RI_LIGHTING;
RI_EXPORT RtToken RI_LIMITS;
RI_EXPORT RtToken RI_LINEAR;
RI_EXPORT RtToken RI_LODRANGE;
RI_EXPORT RtToken RI_LOOP;
RI_EXPORT RtToken RI_LPEGROUP;
RI_EXPORT RtToken RI_MARCH;
RI_EXPORT RtToken RI_MATTE;
RI_EXPORT RtToken RI_MATTEFILE;
RI_EXPORT RtToken RI_MAXANGLE;
RI_EXPORT RtToken RI_MAXDEPTH;
RI_EXPORT RtToken RI_MAXDIFFUSEDEPTH;
RI_EXPORT RtToken RI_MAXDISTANCE;
RI_EXPORT RtToken RI_MAXERROR;
RI_EXPORT RtToken RI_MAXHAIRLENGTH;
RI_EXPORT RtToken RI_MAXHAIRVOLUME;
RI_EXPORT RtToken RI_MAXPIXELDIST;
RI_EXPORT RtToken RI_MAXRAYDEPTH;
RI_EXPORT RtToken RI_MAXSPECULARDEPTH;
RI_EXPORT RtToken RI_MAXVPDEPTH;
RI_EXPORT RtToken RI_MERGE;
RI_EXPORT RtToken RI_METAL;
RI_EXPORT RtToken RI_MIDPOINT;
RI_EXPORT RtToken RI_MINDISTANCE;
RI_EXPORT RtToken RI_MINMAX;
RI_EXPORT RtToken RI_MINSTOREDEPTH;
RI_EXPORT RtToken RI_MINWIDTH;
RI_EXPORT RtToken RI_MITCHELL;
RI_EXPORT RtToken RI_MODE;
RI_EXPORT RtToken RI_MOTIONFACTOR;
RI_EXPORT RtToken RI_MPCACHE;
RI_EXPORT RtToken RI_MPCACHEDIR;
RI_EXPORT RtToken RI_MPCACHESTRIDE;
RI_EXPORT RtToken RI_MPMEMORY;
RI_EXPORT RtToken RI_MULTIGRIDS;
RI_EXPORT RtToken RI_N;
RI_EXPORT RtToken RI_NAME;
RI_EXPORT RtToken RI_NDC;
RI_EXPORT RtToken RI_NEARHITHER;
RI_EXPORT RtToken RI_NEWER;
RI_EXPORT RtToken RI_NEWGROUP;
RI_EXPORT RtToken RI_NG;
RI_EXPORT RtToken RI_NONPERIODIC;
RI_EXPORT RtToken RI_NONUNIFORM;
RI_EXPORT RtToken RI_NP;
RI_EXPORT RtToken RI_NURBCURVATUREDICEFACTOR;
RI_EXPORT RtToken RI_OBJECT;
RI_EXPORT RtToken RI_OBJECTCACHE;
RI_EXPORT RtToken RI_OCCLUSIONBOUND;
RI_EXPORT RtToken RI_OCTREEMEMORY;
RI_EXPORT RtToken RI_OFFSET;
RI_EXPORT RtToken RI_OI;
RI_EXPORT RtToken RI_OLDMOTIONFACTOR;
RI_EXPORT RtToken RI_OPACITY;
RI_EXPORT RtToken RI_OPACITYCACHEMEMORY;
RI_EXPORT RtToken RI_OPACITYMETHOD;
RI_EXPORT RtToken RI_OPACITYMULTIPLIER;
RI_EXPORT RtToken RI_OPAQUE;
RI_EXPORT RtToken RI_ORDER;
RI_EXPORT RtToken RI_ORDERORIGIN;
RI_EXPORT RtToken RI_ORIENTATION;
RI_EXPORT RtToken RI_ORIGIN;
RI_EXPORT RtToken RI_ORTHOGRAPHIC;
RI_EXPORT RtToken RI_OS;
RI_EXPORT RtToken RI_OTHRESHOLD;
RI_EXPORT RtToken RI_OUTPUTALLDECLARES;
RI_EXPORT RtToken RI_OUTSIDE;
RI_EXPORT RtToken RI_P;
RI_EXPORT RtToken RI_PAINT;
RI_EXPORT RtToken RI_PAINTEDPLASTIC;
RI_EXPORT RtToken RI_PATTERN;
RI_EXPORT RtToken RI_PDISC;
RI_EXPORT RtToken RI_PERIODIC;
RI_EXPORT RtToken RI_PERSISTENT;
RI_EXPORT RtToken RI_PERSPECTIVE;
RI_EXPORT RtToken RI_PHOTON;
RI_EXPORT RtToken RI_PHOTONLIFETIME;
RI_EXPORT RtToken RI_PIXELFILTERNAME;
RI_EXPORT RtToken RI_PIXELFILTERWIDTH;
RI_EXPORT RtToken RI_PIXELSAMPLES;
RI_EXPORT RtToken RI_PIXELVARIANCE;
RI_EXPORT RtToken RI_PLANARPROJECTION;
RI_EXPORT RtToken RI_PLASTIC;
RI_EXPORT RtToken RI_POINTFALLOFFPOWER;
RI_EXPORT RtToken RI_POINTLIGHT;
RI_EXPORT RtToken RI_POINTMEMORY;
RI_EXPORT RtToken RI_POWER;
RI_EXPORT RtToken RI_PREBIAS;
RI_EXPORT RtToken RI_PRECISION;
RI_EXPORT RtToken RI_PRESERVECV;
RI_EXPORT RtToken RI_PRIMITIVE;
RI_EXPORT RtToken RI_PRINT;
RI_EXPORT RtToken RI_PRINTONCE;
RI_EXPORT RtToken RI_PROCEDURAL;
RI_EXPORT RtToken RI_PROJECTIONFOV;
RI_EXPORT RtToken RI_PROJECTIONNAME;
RI_EXPORT RtToken RI_PT;
RI_EXPORT RtToken RI_PTEXTUREMAXFILES;
RI_EXPORT RtToken RI_PTEXTUREMEMORY;
RI_EXPORT RtToken RI_PVN;
RI_EXPORT RtToken RI_PW;
RI_EXPORT RtToken RI_PYRAMID;
RI_EXPORT RtToken RI_PYRAMIDENABLE;
RI_EXPORT RtToken RI_PZ;
RI_EXPORT RtToken RI_QUANTIZEDITHER;
RI_EXPORT RtToken RI_QUANTIZERANGE;
RI_EXPORT RtToken RI_QUANTIZETYPE;
RI_EXPORT RtToken RI_R;
RI_EXPORT RtToken RI_RADIOSITYCACHEMEMORY;
RI_EXPORT RtToken RI_RADIOSITYCACHEOMITMINUSONE;
RI_EXPORT RtToken RI_RADIUS;
RI_EXPORT RtToken RI_RASTER;
RI_EXPORT RtToken RI_RASTERORIENT;
RI_EXPORT RtToken RI_RAYDEPTH;
RI_EXPORT RtToken RI_RAY_KAYJIYA;
RI_EXPORT RtToken RI_RAY_LIST;
RI_EXPORT RtToken RI_RAY_TREE;
RI_EXPORT RtToken RI_REFLECTION;
RI_EXPORT RtToken RI_REFWARNING;
RI_EXPORT RtToken RI_RELATIVEDETAIL;
RI_EXPORT RtToken RI_RELATIVESHADINGRATE;
RI_EXPORT RtToken RI_RELIGHTING;
RI_EXPORT RtToken RI_REMAP;
RI_EXPORT RtToken RI_RENDER;
RI_EXPORT RtToken RI_RENDERMEMORY;
RI_EXPORT RtToken RI_RENDERNULL;
RI_EXPORT RtToken RI_RENDERTIME;
RI_EXPORT RtToken RI_REPELFILE;
RI_EXPORT RtToken RI_REPELPARAMS;
RI_EXPORT RtToken RI_RERENDERBAKEDBDIR;
RI_EXPORT RtToken RI_RESETRELATIVESHADINGRATE;
RI_EXPORT RtToken RI_RESIZE;
RI_EXPORT RtToken RI_RESOLUTION;
RI_EXPORT RtToken RI_RESOLUTIONUNIT;
RI_EXPORT RtToken RI_RESOURCE;
RI_EXPORT RtToken RI_REVERSEORIENTATION;
RI_EXPORT RtToken RI_REVERSESIGN;
RI_EXPORT RtToken RI_RGB;
RI_EXPORT RtToken RI_RGBA;
RI_EXPORT RtToken RI_RGBAI;
RI_EXPORT RtToken RI_RGBAZ;
RI_EXPORT RtToken RI_RGBAZI;
RI_EXPORT RtToken RI_RGBI;
RI_EXPORT RtToken RI_RGBZ;
RI_EXPORT RtToken RI_RGBZI;
RI_EXPORT RtToken RI_RH;
RI_EXPORT RtToken RI_RIB;
RI_EXPORT RtToken RI_RIBPARSE;
RI_EXPORT RtToken RI_RIFCONTROL;
RI_EXPORT RtToken RI_RIXPLUGIN;
RI_EXPORT RtToken RI_ROUGHNESS;
RI_EXPORT RtToken RI_ROWSPERSTRIP;
RI_EXPORT RtToken RI_RUNFLAGS;
RI_EXPORT RtToken RI_S;
RI_EXPORT RtToken RI_SAMPLEMOTION;
RI_EXPORT RtToken RI_SAVEDATTRIBUTES;
RI_EXPORT RtToken RI_SAVESHADERSTATE;
RI_EXPORT RtToken RI_SCOPEDCOORDINATESYSTEM;
RI_EXPORT RtToken RI_SCOPENAMES;
RI_EXPORT RtToken RI_SCREEN;
RI_EXPORT RtToken RI_SCREENWINDOW;
RI_EXPORT RtToken RI_SEARCHPATH;
RI_EXPORT RtToken RI_SENSE;
RI_EXPORT RtToken RI_SEPCATROM;
RI_EXPORT RtToken RI_SHADE;
RI_EXPORT RtToken RI_SHADEGROUPS;
RI_EXPORT RtToken RI_SHADEGROUPSIZEFACTOR;
RI_EXPORT RtToken RI_SHADEQUEUESIZEFACTOR;
RI_EXPORT RtToken RI_SHADER;
RI_EXPORT RtToken RI_SHADERINSTANCEID;
RI_EXPORT RtToken RI_SHADERPROFILE;
RI_EXPORT RtToken RI_SHADESIZE;
RI_EXPORT RtToken RI_SHADEWCACHE;
RI_EXPORT RtToken RI_SHADING;
RI_EXPORT RtToken RI_SHADINGGROUP;
RI_EXPORT RtToken RI_SHADINGINTERPOLATION;
RI_EXPORT RtToken RI_SHADINGMODEL;
RI_EXPORT RtToken RI_SHADINGRATE;
RI_EXPORT RtToken RI_SHADOW;
RI_EXPORT RtToken RI_SHINYMETAL;
RI_EXPORT RtToken RI_SHUTTER;
RI_EXPORT RtToken RI_SHUTTEROPENING;
RI_EXPORT RtToken RI_SIDES;
RI_EXPORT RtToken RI_SIGMA;
RI_EXPORT RtToken RI_SIGMABLUR;
RI_EXPORT RtToken RI_SINC;
RI_EXPORT RtToken RI_SMOOTH;
RI_EXPORT RtToken RI_SMOOTHTRIANGLES;
RI_EXPORT RtToken RI_SOURCE;
RI_EXPORT RtToken RI_SPATIALGROUPING;
RI_EXPORT RtToken RI_SPECULAR;
RI_EXPORT RtToken RI_SPECULARCOLOR;
RI_EXPORT RtToken RI_SPECULARHITMODE;
RI_EXPORT RtToken RI_SPECULARTHRESHOLD;
RI_EXPORT RtToken RI_SPHERE;
RI_EXPORT RtToken RI_SPHERICALPROJECTION;
RI_EXPORT RtToken RI_SPOTLIGHT;
RI_EXPORT RtToken RI_SRGB;
RI_EXPORT RtToken RI_ST;
RI_EXPORT RtToken RI_STANDARD;
RI_EXPORT RtToken RI_STATISTICS;
RI_EXPORT RtToken RI_STITCH;
RI_EXPORT RtToken RI_STOCHASTIC;
RI_EXPORT RtToken RI_STRATEGY;
RI_EXPORT RtToken RI_STREAMMARKER;
RI_EXPORT RtToken RI_STRUCTURE;
RI_EXPORT RtToken RI_STYLESHEET;
RI_EXPORT RtToken RI_SUBOCCLUSION;
RI_EXPORT RtToken RI_SUBPIXEL;
RI_EXPORT RtToken RI_SUBWINDOW;
RI_EXPORT RtToken RI_SUSPENDRENDERING;
RI_EXPORT RtToken RI_T;
RI_EXPORT RtToken RI_TEXTURE;
RI_EXPORT RtToken RI_TEXTURECOORDINATES;
RI_EXPORT RtToken RI_TEXTUREMEMORY;
RI_EXPORT RtToken RI_TEXTURENAME;
RI_EXPORT RtToken RI_THREADS;
RI_EXPORT RtToken RI_THRESHOLD;
RI_EXPORT RtToken RI_TIMER;
RI_EXPORT RtToken RI_TO;
RI_EXPORT RtToken RI_TRACE;
RI_EXPORT RtToken RI_TRACEENABLE;
RI_EXPORT RtToken RI_TRACEMINWIDTH;
RI_EXPORT RtToken RI_TRANSFORM;
RI_EXPORT RtToken RI_TRANSIENT;
RI_EXPORT RtToken RI_TRANSMISSION;
RI_EXPORT RtToken RI_TRANSMISSIONHITMODE;
RI_EXPORT RtToken RI_TRANSPARENT;
RI_EXPORT RtToken RI_TRIANGLE;
RI_EXPORT RtToken RI_TRIM;
RI_EXPORT RtToken RI_TRIMCURVE;
RI_EXPORT RtToken RI_TRIMDEVIATION;
RI_EXPORT RtToken RI_U;
RI_EXPORT RtToken RI_UBASISNAME;
RI_EXPORT RtToken RI_UNIFORM_TRIMRANGE;
RI_EXPORT RtToken RI_UNION;
RI_EXPORT RtToken RI_UNKNOWN;
RI_EXPORT RtToken RI_USER;
RI_EXPORT RtToken RI_UVW;
RI_EXPORT RtToken RI_V;
RI_EXPORT RtToken RI_VARSUBST;
RI_EXPORT RtToken RI_VBASISNAME;
RI_EXPORT RtToken RI_VDMAG;
RI_EXPORT RtToken RI_VERBATIM;
RI_EXPORT RtToken RI_VERTEXEDIT;
RI_EXPORT RtToken RI_VIEWFRUSTUMDISTANCE;
RI_EXPORT RtToken RI_VISIBILITY;
RI_EXPORT RtToken RI_VISIBLEPOINTS;
RI_EXPORT RtToken RI_VOLUME;
RI_EXPORT RtToken RI_VOLUMEBOX;
RI_EXPORT RtToken RI_VOLUMECONE;
RI_EXPORT RtToken RI_VOLUMECYLINDER;
RI_EXPORT RtToken RI_VOLUMEELLIPSOID;
RI_EXPORT RtToken RI_VOLUMEINTERPRETATION;
RI_EXPORT RtToken RI_VOLUMEPIXELSAMPLES;
RI_EXPORT RtToken RI_VPDEPTH;
RI_EXPORT RtToken RI_VPDEPTHSHADINGRATE;
RI_EXPORT RtToken RI_VPICOLOR;
RI_EXPORT RtToken RI_VPIDEPTH;
RI_EXPORT RtToken RI_VPIMAGE;
RI_EXPORT RtToken RI_VPINTERIORHEURISTIC;
RI_EXPORT RtToken RI_VPIOBJECTID;
RI_EXPORT RtToken RI_VPRELATIVESHADINGRATE;
RI_EXPORT RtToken RI_VPVOLUMEINTERSECTIONS;
RI_EXPORT RtToken RI_VPVOLUMES;
RI_EXPORT RtToken RI_W;
RI_EXPORT RtToken RI_WIDTH;
RI_EXPORT RtToken RI_WORLD;
RI_EXPORT RtToken RI_WORLDCAMERA;
RI_EXPORT RtToken RI_WORLDDISTANCE;
RI_EXPORT RtToken RI_WRITETODISK;
RI_EXPORT RtToken RI_XMLFILENAME;
RI_EXPORT RtToken RI_YSPLITS;
RI_EXPORT RtToken RI_Z;
RI_EXPORT RtToken RI_ZBLUR;
RI_EXPORT RtToken RI_ZCOMPRESSION;
RI_EXPORT RtToken RI_ZFILE;
RI_EXPORT RtToken RI_ZI;
RI_EXPORT RtToken RI_ZLERP;
RI_EXPORT RtToken RI_ZTHRESHOLD;


/*   Standard RtFilterFuncs */
RI_EXPORT RtFloat RiBesselFilter(RtFloat, RtFloat, RtFloat, RtFloat);
RI_EXPORT RtFloat RiBlackmanHarrisFilter(RtFloat, RtFloat, RtFloat, RtFloat);
RI_EXPORT RtFloat RiBoxFilter(RtFloat, RtFloat, RtFloat, RtFloat);
RI_EXPORT RtFloat RiCatmullRomFilter(RtFloat, RtFloat, RtFloat, RtFloat);
RI_EXPORT RtFloat RiDiskFilter(RtFloat, RtFloat, RtFloat, RtFloat);
RI_EXPORT RtFloat RiGaussianFilter(RtFloat, RtFloat, RtFloat, RtFloat);
RI_EXPORT RtFloat RiMitchellFilter(RtFloat, RtFloat, RtFloat, RtFloat);
RI_EXPORT RtFloat RiLanczosFilter(RtFloat, RtFloat, RtFloat, RtFloat);
RI_EXPORT RtFloat RiSeparableCatmullRomFilter(RtFloat, RtFloat, RtFloat, RtFloat);
RI_EXPORT RtFloat RiSincFilter(RtFloat, RtFloat, RtFloat, RtFloat);
RI_EXPORT RtFloat RiTriangleFilter(RtFloat, RtFloat, RtFloat, RtFloat);


/*   Standard RtErrorHandlers */
RI_EXPORT void RiErrorIgnore(RtInt code, RtInt severity, char *msg);
RI_EXPORT void RiErrorPrint(RtInt code, RtInt severity, char *msg);
RI_EXPORT void RiErrorPrintOnce(RtInt code, RtInt severity, char *msg);
RI_EXPORT void RiErrorCondAbort(RtInt code, RtInt severity, char *msg);
RI_EXPORT void RiErrorAbort(RtInt code, RtInt severity, char *msg);
RI_EXPORT void RiErrorCleanup();


/*   Standard Procedural Primitives */
RI_EXPORT void RiProcDelayedReadArchive(RtPointer data, RtFloat detail);
RI_EXPORT void RiProcRunProgram(RtPointer data, RtFloat detail);
RI_EXPORT void RiProcDynamicLoad(RtPointer data, RtFloat detail);


/*   Standard Procedural2 Primitives */
RI_EXPORT void RiProc2DelayedReadArchive(RtContextHandle c, RtFloat detail,
                                  RtInt n, RtToken toks[], RtPointer vals[]);
RI_EXPORT void RiProc2DynamicLoad(RtContextHandle c, RtFloat detail,
                                  RtInt n, RtToken toks[], RtPointer vals[]);


/*   Standard Procedural2 Bounders */
RI_EXPORT void RiSimpleBound(RtInt n, RtToken const toks[],
                                 RtPointer const vals[], RtBound result[2]);
RI_EXPORT void RiDSOBound(RtInt n, RtToken const toks[],
                                 RtPointer const vals[], RtBound result[2]);


/* Globally Visible "C-linkage" Cubic Basis Definitions */
RI_EXPORT RtBasis RiBezierBasis;
RI_EXPORT RtBasis RiBSplineBasis;
RI_EXPORT RtBasis RiCatmullRomBasis;
RI_EXPORT RtBasis RiHermiteBasis;
RI_EXPORT RtBasis RiPowerBasis;


/* Globally Visible "C-linkage" Miscellaneous Variables */
RI_EXPORT RtInt RiLastError;


/* Extern Declarations for Predefined RI Data Structures */
#define RtVoid void  /* ANSI doesn't allow typedef */
#define RI_FALSE 0
#define RI_TRUE 1
#define RI_INFINITY 1e+38
#define RI_EPSILON 1e-10
#define RI_NULL ((RtToken)0)
#define RI_BEZIERSTEP 3
#define RI_BSPLINESTEP 1
#define RI_CATMULLROMSTEP 1
#define RI_HERMITESTEP 2
#define RI_POWERSTEP 4


/*  Error severity levels */
#define RIE_INFO             0  /* Rendering stats and other info */
#define RIE_WARNING          1  /* Something seems wrong, maybe okay */
#define RIE_ERROR            2  /* Problem. Results may be wrong */
#define RIE_SEVERE           3  /* So bad you should probably abort */
#define RIE_ONCE             128  /*  */
#define RIE_MSGID_ONCE       256  /*  */
#define RIE_SEVERITY_MASK    127  /*  */


/* 
        Error Codes
         1 - 10         System and File Errors
        11 - 20         Program Limitations
        21 - 40         State Errors
        41 - 60         Parameter and Protocol Errors
        61 - 80         Execution Errors
 */
#define RIE_NOERROR          0  /*  */
#define RIE_NOMEM            1  /* Out of memory */
#define RIE_SYSTEM           2  /* Miscellaneous system error */
#define RIE_NOFILE           3  /* File nonexistent */
#define RIE_BADFILE          4  /* Bad file format */
#define RIE_VERSION          5  /* File version mismatch */
#define RIE_DISKFULL         6  /* Target disk is full */
#define RIE_INCAPABLE        11  /* Optional RI feature */
#define RIE_UNIMPLEMENT      12  /* Unimplemented feature */
#define RIE_LIMIT            13  /* Arbitrary program limit */
#define RIE_BUG              14  /* Probably a bug in renderer */
#define RIE_NOTSTARTED       23  /* RiBegin not called */
#define RIE_NESTING          24  /* Bad begin-end nesting */
#define RIE_NOTOPTIONS       25  /* Invalid state for options */
#define RIE_NOTATTRIBS       26  /* Invalid state for attribs */
#define RIE_NOTPRIMS         27  /* Invalid state for primitives */
#define RIE_ILLSTATE         28  /* Other invalid state */
#define RIE_BADMOTION        29  /* Badly formed motion block */
#define RIE_BADSOLID         30  /* Badly formed solid block */
#define RIE_BADTOKEN         41  /* Invalid token for request */
#define RIE_RANGE            42  /* Parameter out of range */
#define RIE_CONSISTENCY      43  /* Parameters inconsistent */
#define RIE_BADHANDLE        44  /* Bad object/light handle */
#define RIE_NOSHADER         45  /* Can't load requested shader */
#define RIE_MISSINGDATA      46  /* Required parameters not provided */
#define RIE_SYNTAX           47  /* Declare type syntax error */
#define RIE_SKIPPING         51  /* Inactive 'If' branch, no rendering */
#define RIE_MATH             61  /* Zerodivide, noninvert matrix, etc. */

/* Ri C API -------------------------------------------*/
RI_EXPORT RtArchiveHandle RiArchiveBegin(RtToken name, ...);
RI_EXPORT RtArchiveHandle RiArchiveBeginV(RtToken name, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiArchiveEnd();
RI_EXPORT void            RiArchiveRecord(RtToken type, char* format, ...);
RI_EXPORT RtLightHandle   RiAreaLightSource(RtToken name, ...);
RI_EXPORT RtLightHandle   RiAreaLightSourceV(RtToken name, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiAtmosphere(RtToken name, ...);
RI_EXPORT void            RiAtmosphereV(RtToken name, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiAttribute(RtToken name, ...);
RI_EXPORT void            RiAttributeV(RtToken name, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiAttributeBegin();
RI_EXPORT void            RiAttributeEnd();
RI_EXPORT void            RiBasis(RtBasis u, RtInt ustep, RtBasis v, 
                               RtInt vstep);
RI_EXPORT void            RiBegin(RtToken name);
RI_EXPORT void            RiBlobby(RtInt nleaf, RtInt ninst, 
                               RtInt* inst, RtInt nflt, RtFloat* flt, 
                               RtInt nstr, RtToken* str, ...);
RI_EXPORT void            RiBlobbyV(RtInt nleaf, RtInt ninst, 
                               RtInt* inst, RtInt nflt, RtFloat* flt, 
                               RtInt nstr, RtToken* str, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiBound(RtBound bound);
RI_EXPORT void            RiBxdf(RtToken name, RtToken handle, ...);
RI_EXPORT void            RiBxdfV(RtToken name, RtToken handle, 
                               RtInt n, RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiCamera(RtToken name, ...);
RI_EXPORT void            RiCameraV(RtToken name, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiClipping(RtFloat nearplane, RtFloat farplane);
RI_EXPORT void            RiClippingPlane(RtFloat Nx, RtFloat Ny, 
                               RtFloat Nz, RtFloat Px, RtFloat Py, 
                               RtFloat Pz);
RI_EXPORT void            RiColor(RtFloat* color);
RI_EXPORT void            RiColorSamples(RtInt n, RtFloat* nRGB, RtFloat* RGBn);
RI_EXPORT void            RiConcatTransform(RtMatrix m);
RI_EXPORT void            RiCone(RtFloat height, RtFloat radius, 
                               RtFloat tmax, ...);
RI_EXPORT void            RiConeV(RtFloat height, RtFloat radius, 
                               RtFloat tmax, RtInt n, RtToken nms[], 
                               RtPointer vals[]);
RI_EXPORT void            RiContext(RtContextHandle ctx);
RI_EXPORT void            RiCoordSysTransform(RtToken fromspace);
RI_EXPORT void            RiCoordinateSystem(char * name);
RI_EXPORT void            RiCropWindow(RtFloat left, RtFloat right, 
                               RtFloat bottom, RtFloat top);
RI_EXPORT void            RiCurves(RtToken type, RtInt ncurves, 
                               RtInt* nvertices, RtToken wrap, ...);
RI_EXPORT void            RiCurvesV(RtToken type, RtInt ncurves, 
                               RtInt* nvertices, RtToken wrap, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiCylinder(RtFloat radius, RtFloat zmin, 
                               RtFloat zmax, RtFloat tmax, ...);
RI_EXPORT void            RiCylinderV(RtFloat radius, RtFloat zmin, 
                               RtFloat zmax, RtFloat tmax, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT RtToken         RiDeclare(char * name, char * decl);
RI_EXPORT void            RiDeformation(RtToken name, ...);
RI_EXPORT void            RiDeformationV(RtToken name, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiDepthOfField(RtFloat fstop, 
                               RtFloat length, RtFloat distance);
RI_EXPORT void            RiDetail(RtBound bound);
RI_EXPORT void            RiDetailRange(RtFloat minvis, 
                               RtFloat lotrans, RtFloat hitrans, 
                               RtFloat maxvis);
RI_EXPORT void            RiDisk(RtFloat height, RtFloat radius, 
                               RtFloat tmax, ...);
RI_EXPORT void            RiDiskV(RtFloat height, RtFloat radius, 
                               RtFloat tmax, RtInt n, RtToken nms[], 
                               RtPointer vals[]);
RI_EXPORT void            RiDisplacement(RtToken name, ...);
RI_EXPORT void            RiDisplacementV(RtToken name, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiDisplay(char * name, RtToken type, 
                               RtToken mode, ...);
RI_EXPORT void            RiDisplayV(char * name, RtToken type, 
                               RtToken mode, RtInt n, RtToken nms[], 
                               RtPointer vals[]);
RI_EXPORT void            RiDisplayChannel(RtToken channel, ...);
RI_EXPORT void            RiDisplayChannelV(RtToken channel, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiEditAttributeBegin(RtToken name);
RI_EXPORT void            RiEditAttributeEnd();
RI_EXPORT void            RiEditBegin(RtToken name, ...);
RI_EXPORT void            RiEditBeginV(RtToken name, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiEditEnd();
RI_EXPORT void            RiEditWorldBegin(RtToken name, ...);
RI_EXPORT void            RiEditWorldBeginV(RtToken name, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiEditWorldEnd();
RI_EXPORT void            RiElse();
RI_EXPORT void            RiElseIf(char * expr, ...);
RI_EXPORT void            RiElseIfV(char * expr, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiEnd();
RI_EXPORT void            RiErrorHandler(RtErrorHandler handler);
RI_EXPORT void            RiExposure(RtFloat gain, RtFloat gamma);
RI_EXPORT void            RiExterior(RtToken name, ...);
RI_EXPORT void            RiExteriorV(RtToken name, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiFormat(RtInt xres, RtInt yres, RtFloat pixel_ar);
RI_EXPORT void            RiFrameAspectRatio(RtFloat ar);
RI_EXPORT void            RiFrameBegin(RtInt frame);
RI_EXPORT void            RiFrameEnd();
RI_EXPORT void            RiGeneralPolygon(RtInt nloops, RtInt* nverts, ...);
RI_EXPORT void            RiGeneralPolygonV(RtInt nloops, 
                               RtInt* nverts, RtInt n, RtToken nms[], 
                               RtPointer vals[]);
RI_EXPORT void            RiGeometricApproximation(RtToken type, RtFloat value);
RI_EXPORT void            RiGeometry(RtToken name, ...);
RI_EXPORT void            RiGeometryV(RtToken name, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT RtContextHandle RiGetContext();
RI_EXPORT void            RiHider(RtToken name, ...);
RI_EXPORT void            RiHiderV(RtToken name, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiHierarchicalSubdivisionMesh(RtToken mask, 
                               RtInt nf, RtInt* nverts, RtInt* verts, 
                               RtInt nt, RtToken* tags, RtInt* nargs, 
                               RtInt* intargs, RtFloat* floatargs, 
                               RtToken* stringargs, ...);
RI_EXPORT void            RiHierarchicalSubdivisionMeshV(
                               RtToken mask, RtInt nf, RtInt* nverts, 
                               RtInt* verts, RtInt nt, RtToken* tags, 
                               RtInt* nargs, RtInt* intargs, 
                               RtFloat* floatargs, RtToken* stringargs, 
                               RtInt n, RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiHyperboloid(RtPoint point1, 
                               RtPoint point2, RtFloat tmax, ...);
RI_EXPORT void            RiHyperboloidV(RtPoint point1, 
                               RtPoint point2, RtFloat tmax, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiIdentity();
RI_EXPORT void            RiIfBegin(char * expr, ...);
RI_EXPORT void            RiIfBeginV(char * expr, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiIfEnd();
RI_EXPORT void            RiIlluminate(RtLightHandle light, RtBoolean onoff);
RI_EXPORT void            RiImager(RtToken name, ...);
RI_EXPORT void            RiImagerV(RtToken name, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiIntegrator(RtToken name, RtToken handle, ...);
RI_EXPORT void            RiIntegratorV(RtToken name, RtToken handle, 
                               RtInt n, RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiInterior(RtToken name, ...);
RI_EXPORT void            RiInteriorV(RtToken name, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT RtLightHandle   RiLightSource(RtToken name, ...);
RI_EXPORT RtLightHandle   RiLightSourceV(RtToken name, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiMakeBrickMap(RtInt nptcs, char ** ptcs, 
                               char * bkm, ...);
RI_EXPORT void            RiMakeBrickMapV(RtInt nptcs, char ** ptcs, 
                               char * bkm, RtInt n, RtToken nms[], 
                               RtPointer vals[]);
RI_EXPORT void            RiMakeBump(char * pic, char * text, 
                               RtToken swrap, RtToken twrap, 
                               RtFilterFunc filt, RtFloat swidth, 
                               RtFloat twidth, ...);
RI_EXPORT void            RiMakeBumpV(char * pic, char * text, 
                               RtToken swrap, RtToken twrap, 
                               RtFilterFunc filt, RtFloat swidth, 
                               RtFloat twidth, RtInt n, RtToken nms[], 
                               RtPointer vals[]);
RI_EXPORT void            RiMakeCubeFaceEnvironment(char * px, 
                               char * nx, char * py, char * ny, char * pz, 
                               char * nz, char * text, RtFloat fov, 
                               RtFilterFunc filt, RtFloat swidth, 
                               RtFloat twidth, ...);
RI_EXPORT void            RiMakeCubeFaceEnvironmentV(char * px, 
                               char * nx, char * py, char * ny, char * pz, 
                               char * nz, char * text, RtFloat fov, 
                               RtFilterFunc filt, RtFloat swidth, 
                               RtFloat twidth, RtInt n, RtToken nms[], 
                               RtPointer vals[]);
RI_EXPORT void            RiMakeLatLongEnvironment(char * pic, 
                               char * text, RtFilterFunc filt, 
                               RtFloat swidth, RtFloat twidth, ...);
RI_EXPORT void            RiMakeLatLongEnvironmentV(char * pic, 
                               char * text, RtFilterFunc filt, 
                               RtFloat swidth, RtFloat twidth, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiMakeShadow(char * pic, char * text, ...);
RI_EXPORT void            RiMakeShadowV(char * pic, char * text, 
                               RtInt n, RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiMakeTexture(char * pic, char * text, 
                               RtToken swrap, RtToken twrap, 
                               RtFilterFunc filt, RtFloat swidth, 
                               RtFloat twidth, ...);
RI_EXPORT void            RiMakeTextureV(char * pic, char * text, 
                               RtToken swrap, RtToken twrap, 
                               RtFilterFunc filt, RtFloat swidth, 
                               RtFloat twidth, RtInt n, RtToken nms[], 
                               RtPointer vals[]);
RI_EXPORT void            RiMatte(RtBoolean onoff);
RI_EXPORT void            RiMotionBegin(RtInt n, ...);
RI_EXPORT void            RiMotionBeginV(RtInt n, RtFloat vals[]);
RI_EXPORT void            RiMotionEnd();
RI_EXPORT void            RiNuPatch(RtInt nu, RtInt uorder, 
                               RtFloat* uknot, RtFloat umin, RtFloat umax, 
                               RtInt nv, RtInt vorder, RtFloat* vknot, 
                               RtFloat vmin, RtFloat vmax, ...);
RI_EXPORT void            RiNuPatchV(RtInt nu, RtInt uorder, 
                               RtFloat* uknot, RtFloat umin, RtFloat umax, 
                               RtInt nv, RtInt vorder, RtFloat* vknot, 
                               RtFloat vmin, RtFloat vmax, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT RtObjectHandle  RiObjectBegin();
RI_EXPORT RtObjectHandle  RiObjectBeginV(RtInt n, RtToken nms[], 
                               RtPointer vals[]);
RI_EXPORT void            RiObjectEnd();
RI_EXPORT void            RiObjectInstance(RtObjectHandle h);
RI_EXPORT void            RiObjectInstanceV(RtObjectHandle h, 
                               RtInt n, RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiOpacity(RtFloat* color);
RI_EXPORT void            RiOption(RtToken name, ...);
RI_EXPORT void            RiOptionV(RtToken name, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiOrientation(RtToken orient);
RI_EXPORT void            RiParaboloid(RtFloat radius, RtFloat zmin, 
                               RtFloat zmax, RtFloat tmax, ...);
RI_EXPORT void            RiParaboloidV(RtFloat radius, RtFloat zmin, 
                               RtFloat zmax, RtFloat tmax, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiPatch(RtToken type, ...);
RI_EXPORT void            RiPatchV(RtToken type, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiPatchMesh(RtToken type, RtInt nu, 
                               RtToken uwrap, RtInt nv, RtToken vwrap, ...);
RI_EXPORT void            RiPatchMeshV(RtToken type, RtInt nu, 
                               RtToken uwrap, RtInt nv, RtToken vwrap, 
                               RtInt n, RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiPattern(RtToken name, RtToken handle, ...);
RI_EXPORT void            RiPatternV(RtToken name, RtToken handle, 
                               RtInt n, RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiPerspective(RtFloat fov);
RI_EXPORT void            RiPixelFilter(RtFilterFunc func, 
                               RtFloat xwidth, RtFloat ywidth);
RI_EXPORT void            RiPixelSampleImager(RtToken name, ...);
RI_EXPORT void            RiPixelSampleImagerV(RtToken name, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiPixelSamples(RtFloat x, RtFloat y);
RI_EXPORT void            RiPixelVariance(RtFloat var);
RI_EXPORT void            RiPoints(RtInt nverts, ...);
RI_EXPORT void            RiPointsV(RtInt nverts, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiPointsGeneralPolygons(RtInt npolys, 
                               RtInt* nloops, RtInt* nverts, RtInt* verts, 
                               ...);
RI_EXPORT void            RiPointsGeneralPolygonsV(RtInt npolys, 
                               RtInt* nloops, RtInt* nverts, RtInt* verts, 
                               RtInt n, RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiPointsPolygons(RtInt npolys, 
                               RtInt* nverts, RtInt* verts, ...);
RI_EXPORT void            RiPointsPolygonsV(RtInt npolys, 
                               RtInt* nverts, RtInt* verts, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiPolygon(RtInt nverts, ...);
RI_EXPORT void            RiPolygonV(RtInt nverts, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiProcedural(RtPointer data, RtBound bound, 
                               RtProcSubdivFunc sfunc, 
                               RtProcFreeFunc ffunc);
RI_EXPORT void            RiProcedural2(RtProc2SubdivFunc sfunc, 
                               RtProc2BoundFunc bfunc, ...);
RI_EXPORT void            RiProcedural2V(RtProc2SubdivFunc sfunc, 
                               RtProc2BoundFunc bfunc, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiProjection(RtToken name, ...);
RI_EXPORT void            RiProjectionV(RtToken name, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiQuantize(RtToken type, RtInt one, 
                               RtInt min, RtInt max, RtFloat dither);
RI_EXPORT void            RiReadArchive(RtToken name, 
                               RtArchiveCallback callback, ...);
RI_EXPORT void            RiReadArchiveV(RtToken name, 
                               RtArchiveCallback callback, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiRelativeDetail(RtFloat rel);
RI_EXPORT void            RiResource(RtToken handle, RtToken type, ...);
RI_EXPORT void            RiResourceV(RtToken handle, RtToken type, 
                               RtInt n, RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiResourceBegin();
RI_EXPORT void            RiResourceEnd();
RI_EXPORT void            RiReverseOrientation();
RI_EXPORT void            RiRotate(RtFloat angle, RtFloat dx, 
                               RtFloat dy, RtFloat dz);
RI_EXPORT void            RiScale(RtFloat sx, RtFloat sy, RtFloat sz);
RI_EXPORT void            RiScopedCoordinateSystem(char * name);
RI_EXPORT void            RiScreenWindow(RtFloat left, RtFloat right, 
                               RtFloat bottom, RtFloat top);
RI_EXPORT void            RiShader(RtToken name, RtToken handle, ...);
RI_EXPORT void            RiShaderV(RtToken name, RtToken handle, 
                               RtInt n, RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiShadingInterpolation(RtToken type);
RI_EXPORT void            RiShadingRate(RtFloat size);
RI_EXPORT void            RiShutter(RtFloat opentime, RtFloat closetime);
RI_EXPORT void            RiSides(RtInt n);
RI_EXPORT void            RiSkew(RtFloat angle, RtFloat d1x, 
                               RtFloat d1y, RtFloat d1z, RtFloat d2x, 
                               RtFloat d2y, RtFloat d2z);
RI_EXPORT void            RiSolidBegin(char * op);
RI_EXPORT void            RiSolidEnd();
RI_EXPORT void            RiSphere(RtFloat radius, RtFloat zmin, 
                               RtFloat zmax, RtFloat tmax, ...);
RI_EXPORT void            RiSphereV(RtFloat radius, RtFloat zmin, 
                               RtFloat zmax, RtFloat tmax, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiSubdivisionMesh(RtToken mask, RtInt nf, 
                               RtInt* nverts, RtInt* verts, RtInt nt, 
                               RtToken* tags, RtInt* nargs, RtInt* intargs, 
                               RtFloat* floatargs, ...);
RI_EXPORT void            RiSubdivisionMeshV(RtToken mask, RtInt nf, 
                               RtInt* nverts, RtInt* verts, RtInt nt, 
                               RtToken* tags, RtInt* nargs, RtInt* intargs, 
                               RtFloat* floatargs, RtInt n, RtToken nms[], 
                               RtPointer vals[]);
RI_EXPORT void            RiSurface(RtToken name, ...);
RI_EXPORT void            RiSurfaceV(RtToken name, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiSystem(char * name);
RI_EXPORT void            RiTextureCoordinates(RtFloat s1, 
                               RtFloat t1, RtFloat s2, RtFloat t2, 
                               RtFloat s3, RtFloat t3, RtFloat s4, 
                               RtFloat t4);
RI_EXPORT void            RiTorus(RtFloat majrad, RtFloat minrad, 
                               RtFloat phimin, RtFloat phimax, 
                               RtFloat tmax, ...);
RI_EXPORT void            RiTorusV(RtFloat majrad, RtFloat minrad, 
                               RtFloat phimin, RtFloat phimax, 
                               RtFloat tmax, RtInt n, RtToken nms[], 
                               RtPointer vals[]);
RI_EXPORT void            RiTransform(RtMatrix m);
RI_EXPORT void            RiTransformBegin();
RI_EXPORT void            RiTransformEnd();
RI_EXPORT RtPoint *       RiTransformPoints(RtToken fromspace, 
                               RtToken tospace, RtInt n, RtPoint * points);
RI_EXPORT void            RiTranslate(RtFloat dx, RtFloat dy, RtFloat dz);
RI_EXPORT void            RiTrimCurve(RtInt nloops, RtInt* ncurves, 
                               RtInt* order, RtFloat* knot, RtFloat* min, 
                               RtFloat* max, RtInt* n, RtFloat* u, 
                               RtFloat* v, RtFloat* w);
RI_EXPORT void            RiVArchiveRecord(RtToken type, 
                               char* format, va_list vap);
RI_EXPORT void            RiVPAtmosphere(RtToken name, ...);
RI_EXPORT void            RiVPAtmosphereV(RtToken name, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiVPInterior(RtToken name, ...);
RI_EXPORT void            RiVPInteriorV(RtToken name, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiVPSurface(RtToken name, ...);
RI_EXPORT void            RiVPSurfaceV(RtToken name, RtInt n, 
                               RtToken nms[], RtPointer vals[]);
RI_EXPORT void            RiVolume(RtToken type, RtBound bound, 
                               RtInt* dimensions, ...);
RI_EXPORT void            RiVolumeV(RtToken type, RtBound bound, 
                               RtInt* dimensions, RtInt n, RtToken nms[], 
                               RtPointer vals[]);
RI_EXPORT void            RiVolumePixelSamples(RtFloat x, RtFloat y);
RI_EXPORT void            RiWorldBegin();
RI_EXPORT void            RiWorldEnd();



#endif /* RI_H */

