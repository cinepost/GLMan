/* $Revision: #6 $  (Pixar - RenderMan Division)  $Date: 2014/12/10 $ */
/*
# ------------------------------------------------------------------------------
#
# Copyright (c) 1997-2010 Pixar Animation Studios. All rights reserved.
#
# The information in this file (the "Software") is provided for the
# exclusive use of the software licensees of Pixar.  Licensees have
# the right to incorporate the Software into other products for use
# by other authorized software licensees of Pixar, without fee.
# Except as expressly permitted herein, the Software may not be
# disclosed to third parties, copied or duplicated in any form, in
# whole or in part, without the prior written permission of
# Pixar Animation Studios.
#
# The copyright notices in the Software and this entire statement,
# including the above license grant, this restriction and the
# following disclaimer, must be included in all copies of the
# Software, in whole or in part, and all permitted derivative works of
# the Software, unless such copies or derivative works are solely
# in the form of machine-executable object code generated by a
# source language processor.
#
# PIXAR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
# ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT
# SHALL PIXAR BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES
# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
# WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
# ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
# SOFTWARE.
#
# Pixar
# 1200 Park Ave
# Emeryville CA 94608
#
# ------------------------------------------------------------------------------
*/
#ifndef _SLO_
#define _SLO_

#include "prmanapi.h"

// NB: this interface is deprecated in favor of the equivalent
//  RixSloInfo interface.

typedef enum {
    SLO_TYPE_UNKNOWN,
    SLO_TYPE_POINT,
    SLO_TYPE_COLOR,
    SLO_TYPE_SCALAR,
    SLO_TYPE_STRING,
/* The following types are primarily used for shaders */
    SLO_TYPE_SHADER,
    SLO_TYPE_SURFACE,
    SLO_TYPE_LIGHT,
    SLO_TYPE_DISPLACEMENT,
    SLO_TYPE_VOLUME,
/* The following are variable types added since RISpec 3.1 */
    SLO_TYPE_VECTOR,
    SLO_TYPE_NORMAL,
    SLO_TYPE_MATRIX,
    SLO_TYPE_STRUCT,
/* Support added in 15.0 */
    SLO_TYPE_IMAGER
    } SLO_TYPE;

typedef enum {
    SLO_STOR_UNKNOWN,
    SLO_STOR_CONSTANT,
    SLO_STOR_VARIABLE,
    SLO_STOR_TEMPORARY,
    SLO_STOR_PARAMETER,
    SLO_STOR_OUTPUTPARAMETER,
    SLO_STOR_GSTATE,
    SLO_STOR_METHODINPUT,
    SLO_STOR_METHODOUTPUT,
    SLO_STOR_REFERENCE,
    SLO_STOR_CONST_REFERENCE,
    SLO_STOR_TYPE_DEF,
    SLO_STOR_STRUCT_MEMBER
    } SLO_STORAGE;

typedef enum {
    SLO_DETAIL_UNKNOWN,
    SLO_DETAIL_VARYING,
    SLO_DETAIL_UNIFORM,
    SLO_DETAIL_DYNAMIC
    } SLO_DETAIL;

typedef struct {
    float	xval;
    float	yval;
    float	zval;
    } POINT3D;

typedef float SCALAR;

typedef int SLO_STRUCTID;

typedef struct slostructinfo { 
    const char *structname;
    SLO_STRUCTID id;
    unsigned int nummembers;
} SLO_STRUCTINFO;

typedef struct slovissymdef {
    char *svd_name;
    SLO_TYPE svd_type;
    SLO_STORAGE svd_storage;
    SLO_DETAIL svd_detail;
    char *svd_spacename;
    union {
        POINT3D        *pointval;
        SCALAR         *scalarval;
        char           *stringval;
        float          *matrixval;
        SLO_STRUCTINFO *structval;
    } svd_default;
    union svd_defaultvalu {
	POINT3D	svd_pointval;
	SCALAR	svd_scalarval;
    } svd_defaultval;
    unsigned svd_valisvalid : 1;
    int svd_arraylen;
    SLO_STRUCTINFO svd_structinfo;
} SLO_VISSYMDEF;

typedef void* SLO_METHOD;

#define NULL_SLOVISSYMDEF ((SLO_VISSYMDEF *) 0)

#ifdef  __cplusplus
extern "C" {
#endif /* __cplusplus */

PRMANAPI extern void Slo_SetPath(char *path);
PRMANAPI extern const char *Slo_GetPath(void);
PRMANAPI extern int Slo_SetShader(char *name);
PRMANAPI extern const char *Slo_GetName(void);
PRMANAPI extern SLO_TYPE Slo_GetType(void);
PRMANAPI extern int Slo_HasMethod(const char *name);
PRMANAPI extern const char** Slo_GetMethodNames(void);
PRMANAPI extern int Slo_GetNArgs(void);
PRMANAPI extern SLO_VISSYMDEF *Slo_GetArgByName(char *name);
PRMANAPI extern SLO_VISSYMDEF *Slo_GetArgById(int id);
PRMANAPI extern SLO_VISSYMDEF *Slo_GetArrayArgElement(SLO_VISSYMDEF *array, int index);
PRMANAPI extern void Slo_EndShader(void);
PRMANAPI extern char *Slo_TypetoStr(SLO_TYPE type);
PRMANAPI extern char *Slo_StortoStr(SLO_STORAGE storage);
PRMANAPI extern char *Slo_DetailtoStr(SLO_DETAIL detail);
PRMANAPI extern const char* Slo_GetMetaData(const char* name);
PRMANAPI extern const char** Slo_GetAllMetaData();
PRMANAPI extern const char** Slo_GetPlugins();
PRMANAPI extern void Slo_Free(void *);

#ifdef  __cplusplus
}
#endif /* __cplusplus */

#endif /* _SLO_ */
