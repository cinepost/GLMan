#ifndef PRMANAPI_H
#define PRMANAPI_H

/* $Revision: #6 $ $Date: 2014/12/10 $ */
/*
# ------------------------------------------------------------------------------
#
# Copyright (c) 2008-2010 Pixar Animation Studios. All rights reserved.
#
# The information in this file (the "Software") is provided for the
# exclusive use of the software licensees of Pixar.  Licensees have
# the right to incorporate the Software into other products for use
# by other authorized software licensees of Pixar, without fee.
# Except as expressly permitted herein, the Software may not be
# disclosed to third parties, copied or duplicated in any form, in
# whole or in part, without the prior written permission of
# Pixar Animation Studios.
#
# The copyright notices in the Software and this entire statement,
# including the above license grant, this restriction and the
# following disclaimer, must be included in all copies of the
# Software, in whole or in part, and all permitted derivative works of
# the Software, unless such copies or derivative works are solely
# in the form of machine-executable object code generated by a
# source language processor.
#
# PIXAR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
# ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT
# SHALL PIXAR BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES
# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
# WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
# ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
# SOFTWARE.
#
# Pixar
# 1200 Park Ave
# Emeryville CA 94608
#
# ------------------------------------------------------------------------------
*/

/* Pixar's PhotoRealistic RenderMan API header file */

/* This header file is used to create decoration for function
 * definitions that will be used by external consumers of the
 * interface. The interface has to change "gender" based on the
 * construction of the interface or the consumption of the interface.
 * This can then be used by all public header files
 */

/**********************************/
/* API VERSION MACROS             */
/**********************************/
#define _PRMANAPI_VERSION_  19
#define _PRMANAPI_RELEASE_  0

/* Generally RenderMan plugin APIs are guaranteed to be stable
 * for a given MAJOR version.  Usually they are much more stable
 * than that as our RixInterface layer offers certain forward
 * compatibility guarantees.  In the course of the development
 * of a new API, this guarantee is relaxed and it may be
 * useful to conditionally compile based on the BUILD.
 */
#define _PRMANAPI_VERSION_MAJOR_  19
#define _PRMANAPI_VERSION_MINOR_  0
#define _PRMANAPI_VERSION_BUILD_  1457856

/* First define IMPORT and EXPORT */
#ifdef _MSC_VER
#    define PRMANIMPORT __declspec(dllimport)
#    define PRMANEXPORT __declspec(dllexport)
#    define RSLEXPORT   __declspec(dllexport)  /* for backwards compatability */
#    define PRMAN_INLINE __forceinline
#    define PRMAN_NOINLINE __declspec(noinline)
#else
#    define PRMANIMPORT
#    define PRMANEXPORT __attribute__ ((visibility("default")))
#    define RSLEXPORT   __attribute__ ((visibility("default")))
#    define PRMAN_INLINE inline __attribute__((always_inline))
#    define PRMAN_NOINLINE __attribute__((noinline))
#endif

#ifndef NDEBUG
#define PRMAN_INLINE_NONDEBUG  PRMAN_NOINLINE
#else
#define PRMAN_INLINE_NONDEBUG  PRMAN_INLINE
#endif

/* Now switch if we are BUILDING the API or CONSUMING the API */
/* By default consumers of the API need not #define anything  */
#ifdef PRMANBUILDINGAPI 
#    define PRMANAPI PRMANEXPORT
#else
#    define PRMANAPI PRMANIMPORT
#endif

/* A 64-bit signed/unsigned integer on all platforms */
#ifdef _MSC_VER   // Windows
typedef __int64 RtInt64;
typedef unsigned __int64 RtUInt64;
#else
#include <stdint.h>
typedef int64_t RtInt64;
typedef uint64_t RtUInt64;
#endif

#ifndef __cplusplus
    /* here's an interface for c callers..., might be used by
     * clients of libprman.so. These need to be public API
     * entry points, since they are called from clients
     * of the dynamic runtime.
     */
    PRMANAPI int PRManBegin(int argc, char *argv[]);
    PRMANAPI int PRManGo();
    PRMANAPI int PRManEnd();
#else
    extern "C" PRMANAPI int PRManBegin(int argc, char *argv[]);
    extern "C" PRMANAPI int PRManGo();
    extern "C" PRMANAPI int PRManEnd();
#endif


#endif /* PRMANAPI */
